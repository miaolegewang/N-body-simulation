#
# This Makefile is for simluating N-body system  in CUDA
# Typing 'make' will create the executable file and
# 'make clean' will remove all the executable file generated by this file
#

# define compiler: gcc for C program in this case
COMPILER = /usr/local/cuda-5.5/bin/nvcc

# set flags for compiling the program
# -g  		adds debugging information to the executable file
# -Wall 	turns on most, but not all, compiler warnings
CFLAGS = -g -arch=sm_20

# set flag for environment
# if env is set then the code is compiled under windows 10 environment
#  add a flag -std=c11
ifdef env
	CFLAGS += -std=c11
endif

# set grid dimension and set up a default block size 16
#  need only one dimension
ifdef bls
	DIM = -DBLOCKSIZE=$(bls)
else
	DIM = -DBLOCKSIZE=256
endif

# add libraries
LIBRARY = -lm

BLOCKING = $(DIM)
CFLAGS += $(BLOCKING) -O3

OBJECTS = nbody.cu
# defining target for make
all: clean stable unstable

stable: $(OBJECTS)
	$(COMPILER) $(CFLAGS) $(LIBRARY) -o stable $(OBJECTS)

unstable: $(OBJECTS)
	$(COMPILER) $(CFLAGS) $(LIBRARY) -o unstable $(OBJECTS) -DUNSTABLE=1

%.o: %.c
		$(COMPILER) -c $(CFLAGS) $(LIBRARY) $<

# Make file test
test: gputest.cu
	$(COMPILER) $(CFLAGS) $(LIBRARY) -o test gputest.cu

clean:
	$(RM) stable unstable test
